dnl Process this file with autoconf to produce a configure script.
dnl $Id: configure.in,v 1.12.2.2 2006/01/04 17:00:40 amura Exp $
AC_REVISION($Revision: 1.12.2.2 $)
AC_INIT(basic.c)
AC_CONFIG_HEADER(sysconfig.h:sys/unix/sysconfig.h.in)
AC_CONFIG_AUX_DIR(sys/unix)

dnl Checks for programs.
AC_CANONICAL_HOST
USER_CFLAGS=$CFLAGS
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S

dnl Don't strip if we don't have it
AC_CHECK_PROG(STRIP, strip, strip, :)
AC_CHECK_PROG(PERL, perl, perl, :)

dnl Set default value for CFLAGS if none is defined or it's empty
if test -z "$USER_CFLAGS"; then
  CFLAGS="-O"
  test "$GCC" = yes && CFLAGS="-O2"
else
  CFLAGS=$USER_CFLAGS
fi

AC_MINIX

dnl Checks for libraries.
dnl Search tgetstr() in termcap, termlib, curses
AC_ARG_WITH(terminfo,
	[  --with-terminfo         Build with terminfo library.],
	[ts_with_terminfo="yes"], [ts_with_terminfo="no"])
AC_ARG_WITH(termcap, 
	[  --with-termcap          Build with termcap library. (default)],
	[ts_with_terminfo="no"])
if test "$ts_with_terminfo" = "yes"; then
 AC_SEARCH_LIBS(tgetstr, curses ncurses termlib)
else
 AC_SEARCH_LIBS(tgetstr, termcap curses ncurses)
fi

dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(assert.h)
AC_CHECK_HEADERS(unistd.h fcntl.h sys/param.h sys/ioctl.h sys/file.h sys/time.h)
AC_CHECK_HEADERS(termio.h termios.h sgtty.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME

dnl CYGWIN has fd_set, but cannot detect it by AC_CHECK_TYPE
if test "$host_os" != "cygwin"; then
  AC_CHECK_TYPE(fd_set, int)
fi
dnl Minix define SIGTSTP but don't have suspend yet...
dnl I want to use $host_os, but cannot use it because Minix's sed has bug...
case "$host" in
  *-*-minix*)
    AC_DEFINE(UNDEF_SIGTSTP, 1);;
esac

dnl Checks for library functions.
AC_FUNC_ALLOCA
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MEMCMP
AC_TYPE_SIGNAL
AC_FUNC_VFORK
AC_CHECK_FUNCS(getcwd rmdir rename opendir select mkstemp bcopy bzero bcmp)
AC_CHECK_FUNCS(rindex symlink dup2 sigprocmask getgroups)

dnl Checks for commands called from dired
AC_PATH_PROG(cp_cmd, cp)
AC_DEFINE_UNQUOTED(CP_CMD, "$cp_cmd")
AC_PATH_PROG(mv_cmd, mv)
AC_DEFINE_UNQUOTED(MV_CMD, "$mv_cmd")
AC_PATH_PROG(ls_cmd, ls)
AC_DEFINE_UNQUOTED(LS_CMD, "$ls_cmd")
AC_PATH_PROG(rmdir_cmd, rmdir)
AC_DEFINE_UNQUOTED(RMDIR_CMD, "$rmdir_cmd")

dnl If the user wants unicode support.
AC_MSG_CHECKING(if --enable-unicode option specified)
AC_ARG_ENABLE(unicode,
	[  --enable-unicode[=DIR]  Build a unicode supported version.],
	[cv_unicode="yes"; iconvpath=$enableval], [cv_unicode="no"])
AC_MSG_RESULT($cv_unicode)

if test "$cv_unicode" = "yes"; then

dnl Some operating system include iconv libraries by default
	if test "$iconvpath" = "yes"; then
		case "$host_os" in
			freebsd[[234]]*)
				iconvpath="/usr/local";;
			netbsd1.[[345]]*)
				iconvpath="/usr/pkg";;
		esac
	fi
	OLD_CPPFLAGS=$CPPFLAGS
	if test "$iconvpath" != "yes"; then
		CFLAGS="-I$iconvpath/include $CFLAGS"
		LDFLAGS="-L$iconvpath/lib $LDFLAGS"
	fi

dnl we use AC_TRY_COMPILE not AC_CHECK_HEADER, to avoid unnecessery
dnl use of CPPFLAGS. (why?)
	AC_MSG_CHECKING(for iconv.h)
	AC_CACHE_VAL(ac_cv_iconvhdrcheck, [dnl
	AC_TRY_COMPILE([#include <iconv.h>], iconv_t ic;,
		[ac_cv_iconvhdrcheck="yes"], [ac_cv_iconvhdrcheck="no"])])
	AC_MSG_RESULT($ac_cv_iconvhdrcheck)
	if test "$ac_cv_iconvhdrcheck" = "no"; then
		echo -n "Fatal error: no iconv header in suggested path"
		if test "$iconvpath" != "yes"; then
			echo ", $iconvpath/include."
		else
			echo "."
		fi
		exit 1
	fi

dnl find iconv library in iconv, dld, giconv etc.
	AC_MSG_CHECKING(for library containing iconv_open)
	OLD_LIBS=$LIBS
	for x_libname in iconv giconv dld ''; do
		if test "$x_libname" != ""; then
			LIBS="-l$x_libname $OLD_LIBS"
		fi
dnl Damn, Japaneses EUC's IANA official character-set name is EUC-JP,
dnl But some HP-UX system using EUCjp...
		for x_euc in EUC-JP EUCjp; do
			AC_TRY_RUN([
#include <iconv.h>
int main(){
    iconv_t i, j;
    i = iconv_open("$x_euc", "UTF-8");
    j = iconv_open("$x_euc", "UCS-2");
    if (i == (iconv_t)-1 || j == (iconv_t)-1) return 1;
    return 0;
}], [iconv_euc_code=$x_euc], [iconv_euc_code="no"], [iconv_euc_code="EUC-JP"])
			if test "$iconv_euc_code" != "no"; then
				break 2
			fi
		done
	done
	if test "$iconv_euc_code" = "no"; then
		echo "Fatal error: cannot find iconv(3) or iconv(3) cannot convert UTF-8/UCS-2/EUC-jp"
		exit 1
	fi
	AC_MSG_RESULT($x_libname (EUC codename:$iconv_euc_code))
	AC_DEFINE_UNQUOTED(EUC_CODENAME, "$iconv_euc_code")
	AC_DEFINE(USE_UNICODE)
fi

dnl If the user wants canna support.
AC_MSG_CHECKING(if --enable-canna option specified)
AC_ARG_ENABLE(canna,
	[  --enable-canna[=DIR]    Build a canna version.],
	[cv_canna="yes"; cannapath=$enableval], [cv_canna="no"])
AC_MSG_RESULT($cv_canna)
if test "$cv_canna" = "yes"; then

dnl Some operating system include canna libraries by default.
dnl Use that pathname by default.
dnl for freebsd2.*, order DOES matter.  don't bother.
	if test "$cannapath" = "yes"; then
		case "$host_os" in
		bsdi2.1)
			cannapath="/usr/contrib/canna";;
		netbsd*)
			cannapath="/usr/pkg";;
		freebsd2.2*)
			cannapath="/usr/local";;
		freebsd2*)
			cannapath="/usr/local/canna";;
		freebsd*)
			cannapath="/usr/local";;
		*)
			cannapath="/usr/local/canna";;
		esac
	fi

	if test "$cannapath" != "yes"; then
		CFLAGS="-I$cannapath/include $CFLAGS"
		LDFLAGS="-L$cannapath/lib $LDFLAGS"
	fi

dnl we use AC_TRY_COMPILE not AC_CHECK_HEADER, to avoid unnecessery
dnl use of CPPFLAGS. (why?)
	AC_MSG_CHECKING(for canna/jrkanji.h)
	AC_CACHE_VAL(ac_cv_cannahdrcheck, [dnl
	AC_TRY_COMPILE([#include <canna/jrkanji.h>], jrKanjiStatus ks;,
		[ac_cv_cannahdrcheck="yes"], [ac_cv_cannahdrcheck="no"])])
	AC_MSG_RESULT($ac_cv_cannahdrcheck)
	if test "$cannahdrcheck" = "no"; then
		echo -n "Fatal error: no canna header in suggested path"
		if test "$cannapath" != "yes"; then
			echo ", $cannapath/include."
		else
			echo "."
		fi
		exit 1
	fi

	AC_CHECK_LIB(canna, jrKanjiControl,
		[cv_cannalibcheck="yes"], [cv_cannalibcheck="no"])
	if test "$cannalibcheck" = "no"; then
		echo "Fatal error: no canna library in suggested path"
		if test "$cannapath" != "yes"; then
			echo ", $cannapath/lib."
		else
			echo "."
		fi
		exit 1
	fi
	LIBS="-lcanna $LIBS"
	AC_DEFINE(CANNA)
fi

AC_OUTPUT(Makefile:sys/unix/Makefile.in)
